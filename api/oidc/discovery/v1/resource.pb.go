// Licensed to SolID under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. SolID licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: oidc/discovery/v1/resource.proto

package discoveryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProtectedResourceMetadata describes the Protected Resource Metadata properties.
// https://www.ietf.org/id/draft-ietf-oauth-resource-metadata-00.html#name-protected-resource-metadata
type ProtectedResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The protected resource's resource identifier, which is a URL that
	// uses the https scheme and has no fragment components.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// OPTIONAL. JSON array containing a list of OAuth authorization server issuer
	// identifiers, as defined in [OAuth.AuthorizationMetadata], for authorization
	// servers that can be used with this protected resource. Protected resources
	// MAY choose not to advertise some supported authorization servers even when
	// this parameter is used. In some use cases, the set of authorization servers
	// will not be enumerable, in which case this metadata parameter would not be
	// used.
	AuthorizationServers []string `protobuf:"bytes,2,rep,name=authorization_servers,json=authorizationServers,proto3" json:"authorization_servers,omitempty"`
	// OPTIONAL. URL of the protected resource's JWK Set [JWK] document. This
	// contains keys belonging to the protected resource. For instance, this JWK
	// Set MAY contain encryption key(s) that are used to encrypt access tokens
	// to the protected resource. When both signing and encryption keys are made
	// available, a use (public key use) parameter value is REQUIRED for all keys
	// in the referenced JWK Set to indicate each key's intended usage.
	JwksUri *string `protobuf:"bytes,3,opt,name=jwks_uri,json=jwksUri,proto3,oneof" json:"jwks_uri,omitempty"`
	// RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749] scope
	// values that are used in authorization requests to request access to this
	// protected resource. Protected resources MAY choose not to advertise some
	// scope values provided even when this parameter is used.
	ScopesProvided []string `protobuf:"bytes,4,rep,name=scopes_provided,json=scopesProvided,proto3" json:"scopes_provided,omitempty"`
	// OPTIONAL. JSON array containing a list of the OAuth 2.0 Bearer Token
	// [RFC6750] presentation methods that this protected resource supports.
	// Defined values are ["header", "fragment", "query"], corresponding to
	// Sections 2.1, 2.2, and 2.3 of RFC 6750.
	BearerMethodsSupported []string `protobuf:"bytes,5,rep,name=bearer_methods_supported,json=bearerMethodsSupported,proto3" json:"bearer_methods_supported,omitempty"`
	// OPTIONAL. JSON array containing a list of the JWS [JWS] signing algorithms
	// (alg values) [JWA] supported by the protected resource for signed content.
	// The value none MAY be included.
	ResourceSigningAlgValuesSupported []string `protobuf:"bytes,6,rep,name=resource_signing_alg_values_supported,json=resourceSigningAlgValuesSupported,proto3" json:"resource_signing_alg_values_supported,omitempty"`
	// OPTIONAL. JSON array containing a list of the JWE [JWE] encryption
	// algorithms (alg values) [JWA] supported by the protected resource for
	// encrypted content.
	ResourceEncryptionAlgValuesSupported []string `protobuf:"bytes,7,rep,name=resource_encryption_alg_values_supported,json=resourceEncryptionAlgValuesSupported,proto3" json:"resource_encryption_alg_values_supported,omitempty"`
	// OPTIONAL. JSON array containing a list of the JWE encryption algorithms
	// (enc values) [JWA] supported by the protected resource for encrypted
	// content.
	ResourceEncryptionEncValuesSupported []string `protobuf:"bytes,8,rep,name=resource_encryption_enc_values_supported,json=resourceEncryptionEncValuesSupported,proto3" json:"resource_encryption_enc_values_supported,omitempty"`
	// OPTIONAL. URL of a page containing human-readable information that
	// developers might want or need to know when using the protected resource.
	ResourceDocumentation *string `protobuf:"bytes,9,opt,name=resource_documentation,json=resourceDocumentation,proto3,oneof" json:"resource_documentation,omitempty"`
	// OPTIONAL. URL that the protected resource provides to read about the
	// protected resource's requirements on how the client can use the data
	// provided by the protected resource.
	ResourcePolicyUri *string `protobuf:"bytes,10,opt,name=resource_policy_uri,json=resourcePolicyUri,proto3,oneof" json:"resource_policy_uri,omitempty"`
	// OPTIONAL. URL that the protected resource provides to read about the
	// protected resource's terms of service.
	ResourceTosUri *string `protobuf:"bytes,11,opt,name=resource_tos_uri,json=resourceTosUri,proto3,oneof" json:"resource_tos_uri,omitempty"`
	// OPTIONAL. A JWT containing metadata values about the protected resource as
	// claims. This is a string value consisting of the entire signed JWT. A
	// signed_metadata metadata value SHOULD NOT appear as a claim in the JWT.
	SignedMetadata *string `protobuf:"bytes,12,opt,name=signed_metadata,json=signedMetadata,proto3,oneof" json:"signed_metadata,omitempty"`
}

func (x *ProtectedResourceMetadata) Reset() {
	*x = ProtectedResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_discovery_v1_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtectedResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtectedResourceMetadata) ProtoMessage() {}

func (x *ProtectedResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_discovery_v1_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtectedResourceMetadata.ProtoReflect.Descriptor instead.
func (*ProtectedResourceMetadata) Descriptor() ([]byte, []int) {
	return file_oidc_discovery_v1_resource_proto_rawDescGZIP(), []int{0}
}

func (x *ProtectedResourceMetadata) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ProtectedResourceMetadata) GetAuthorizationServers() []string {
	if x != nil {
		return x.AuthorizationServers
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetJwksUri() string {
	if x != nil && x.JwksUri != nil {
		return *x.JwksUri
	}
	return ""
}

func (x *ProtectedResourceMetadata) GetScopesProvided() []string {
	if x != nil {
		return x.ScopesProvided
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetBearerMethodsSupported() []string {
	if x != nil {
		return x.BearerMethodsSupported
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetResourceSigningAlgValuesSupported() []string {
	if x != nil {
		return x.ResourceSigningAlgValuesSupported
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetResourceEncryptionAlgValuesSupported() []string {
	if x != nil {
		return x.ResourceEncryptionAlgValuesSupported
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetResourceEncryptionEncValuesSupported() []string {
	if x != nil {
		return x.ResourceEncryptionEncValuesSupported
	}
	return nil
}

func (x *ProtectedResourceMetadata) GetResourceDocumentation() string {
	if x != nil && x.ResourceDocumentation != nil {
		return *x.ResourceDocumentation
	}
	return ""
}

func (x *ProtectedResourceMetadata) GetResourcePolicyUri() string {
	if x != nil && x.ResourcePolicyUri != nil {
		return *x.ResourcePolicyUri
	}
	return ""
}

func (x *ProtectedResourceMetadata) GetResourceTosUri() string {
	if x != nil && x.ResourceTosUri != nil {
		return *x.ResourceTosUri
	}
	return ""
}

func (x *ProtectedResourceMetadata) GetSignedMetadata() string {
	if x != nil && x.SignedMetadata != nil {
		return *x.SignedMetadata
	}
	return ""
}

var File_oidc_discovery_v1_resource_proto protoreflect.FileDescriptor

var file_oidc_discovery_v1_resource_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x22, 0xa8, 0x06, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x16, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x25, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x21, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x28, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6c, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x24, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x56, 0x0a, 0x28, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x24, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x16, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x15, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6a, 0x77, 0x6b, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0xbd, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x7a, 0x6e, 0x74,
	0x72, 0x2e, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f,
	0x69, 0x64, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f,
	0x44, 0x58, 0xaa, 0x02, 0x11, 0x4f, 0x69, 0x64, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x4f, 0x69, 0x64, 0x63, 0x5c, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x4f, 0x69, 0x64,
	0x63, 0x5c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4f, 0x69, 0x64,
	0x63, 0x3a, 0x3a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidc_discovery_v1_resource_proto_rawDescOnce sync.Once
	file_oidc_discovery_v1_resource_proto_rawDescData = file_oidc_discovery_v1_resource_proto_rawDesc
)

func file_oidc_discovery_v1_resource_proto_rawDescGZIP() []byte {
	file_oidc_discovery_v1_resource_proto_rawDescOnce.Do(func() {
		file_oidc_discovery_v1_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidc_discovery_v1_resource_proto_rawDescData)
	})
	return file_oidc_discovery_v1_resource_proto_rawDescData
}

var file_oidc_discovery_v1_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_oidc_discovery_v1_resource_proto_goTypes = []interface{}{
	(*ProtectedResourceMetadata)(nil), // 0: oidc.discovery.v1.ProtectedResourceMetadata
}
var file_oidc_discovery_v1_resource_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_oidc_discovery_v1_resource_proto_init() }
func file_oidc_discovery_v1_resource_proto_init() {
	if File_oidc_discovery_v1_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidc_discovery_v1_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtectedResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oidc_discovery_v1_resource_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidc_discovery_v1_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidc_discovery_v1_resource_proto_goTypes,
		DependencyIndexes: file_oidc_discovery_v1_resource_proto_depIdxs,
		MessageInfos:      file_oidc_discovery_v1_resource_proto_msgTypes,
	}.Build()
	File_oidc_discovery_v1_resource_proto = out.File
	file_oidc_discovery_v1_resource_proto_rawDesc = nil
	file_oidc_discovery_v1_resource_proto_goTypes = nil
	file_oidc_discovery_v1_resource_proto_depIdxs = nil
}
