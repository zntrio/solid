// Licensed to SolID under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. SolID licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: oidc/core/v1/core_api.proto

package corev1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthorizationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. Issuer uri.
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// REQUIRED. Client that requests the authorization requests registration.
	Client *Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	// REQUIRED. User identity.
	Subject string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	// REQUIRED. Authorization request object.
	AuthorizationRequest *AuthorizationRequest `protobuf:"bytes,4,opt,name=authorization_request,json=authorizationRequest,proto3" json:"authorization_request,omitempty"`
}

func (x *AuthorizationCodeRequest) Reset() {
	*x = AuthorizationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationCodeRequest) ProtoMessage() {}

func (x *AuthorizationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationCodeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizationCodeRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizationCodeRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *AuthorizationCodeRequest) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *AuthorizationCodeRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AuthorizationCodeRequest) GetAuthorizationRequest() *AuthorizationRequest {
	if x != nil {
		return x.AuthorizationRequest
	}
	return nil
}

// https://www.rfc-editor.org/rfc/rfc6749.html#section-4.1.2
type AuthorizationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// REQUIRED.  The authorization code generated by the
	// authorization server.  The authorization code MUST expire
	// shortly after it is issued to mitigate the risk of leaks.  A
	// maximum authorization code lifetime of 10 minutes is
	// RECOMMENDED.  The client MUST NOT use the authorization code
	// more than once.  If an authorization code is used more than
	// once, the authorization server MUST deny the request and SHOULD
	// revoke (when possible) all tokens previously issued based on
	// that authorization code.  The authorization code is bound to
	// the client identifier and redirection URI.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// REQUIRED if the "state" parameter was present in the client
	// authorization request.  The exact value received from the
	// client.
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// REQUIRED. Assembled redirection uri to application.
	RedirectUri string `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// REQUIRED. the client_id of the client the response is intended for.
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// A JSON number that represents the lifetime of the
	// authorization code in seconds.  The authorization code lifetime is at the
	// discretion of the AS.
	ExpiresIn uint64 `protobuf:"fixed64,6,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// REQUIRED
	// https://datatracker.ietf.org/doc/draft-meyerzuselhausen-oauth-iss-auth-resp/
	//
	// The "iss" parameter value is the issuer identifier of the
	// authorization server which created the authorization response, as
	// defined in [RFC8414].  Its value MUST be a URL that uses the "https"
	// scheme without any query or fragment components.  If the
	// authorization server provides metadata as defined in [RFC8414], the
	// value of the parameter "iss" MUST be identical to the authorization
	// server metadata value "issuer".
	Issuer string `protobuf:"bytes,7,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// REQUIRED. The authorization request request response mode.
	ResponseMode string `protobuf:"bytes,8,opt,name=response_mode,json=responseMode,proto3" json:"response_mode,omitempty"`
}

func (x *AuthorizationCodeResponse) Reset() {
	*x = AuthorizationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationCodeResponse) ProtoMessage() {}

func (x *AuthorizationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationCodeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizationCodeResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizationCodeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AuthorizationCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthorizationCodeResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizationCodeResponse) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizationCodeResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizationCodeResponse) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *AuthorizationCodeResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *AuthorizationCodeResponse) GetResponseMode() string {
	if x != nil {
		return x.ResponseMode
	}
	return ""
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. Issuer uri.
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// REQUIRED. Client that requests the authorization requests registration.
	Client *Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	// REQUIRED. The request to register.
	AuthorizationRequest *AuthorizationRequest `protobuf:"bytes,3,opt,name=authorization_request,json=authorizationRequest,proto3" json:"authorization_request,omitempty"`
	// OPTIONAL. DPoP Proof confirmation.
	Confirmation *TokenConfirmation `protobuf:"bytes,4,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{2}
}

func (x *RegistrationRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *RegistrationRequest) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *RegistrationRequest) GetAuthorizationRequest() *AuthorizationRequest {
	if x != nil {
		return x.AuthorizationRequest
	}
	return nil
}

func (x *RegistrationRequest) GetConfirmation() *TokenConfirmation {
	if x != nil {
		return x.Confirmation
	}
	return nil
}

type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // https://tools.ietf.org/html/draft-lodderstedt-oauth-par-01#section-2.2
	// The request URI corresponding to the authorization
	// request posted.  This URI is used as reference to the respective
	// request data in the subsequent authorization request only.  The
	// way the authorization process obtains the authorization request
	// data is at the discretion of the authorization server and out of
	// scope of this specification.  There is no need to make the
	// authorization request data available to other parties via this
	// URI.
	RequestUri string `protobuf:"bytes,2,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	// A JSON number that represents the lifetime of the
	// request URI in seconds.  The request URI lifetime is at the
	// discretion of the AS.
	ExpiresIn uint64 `protobuf:"fixed64,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// Issuer URI.
	Issuer string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{3}
}

func (x *RegistrationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RegistrationResponse) GetRequestUri() string {
	if x != nil {
		return x.RequestUri
	}
	return ""
}

func (x *RegistrationResponse) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *RegistrationResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. Issuer url.
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// REQUIRED. The client that request token generation.
	Client *Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	// REQUIRED. The grant_type value to use.
	GrantType string `protobuf:"bytes,3,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	// OPTIONAL. Scope to use for token request
	Scope *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// OPTIONAL. Token confirmation.
	TokenConfirmation *TokenConfirmation `protobuf:"bytes,5,opt,name=token_confirmation,json=tokenConfirmation,proto3" json:"token_confirmation,omitempty"`
	// OPTIONAL
	// https://tools.ietf.org/html/rfc8707
	// Indicates the target service or resource to which access is being
	// requested.  Its value MUST be an absolute URI, as specified by
	// Section 4.3 of [RFC3986].  The URI MUST NOT include a fragment
	// component.  It SHOULD NOT include a query component, but it is
	// recognized that there are cases that make a query component a
	// useful and necessary part of the resource parameter, such as when
	// one or more query parameters are used to scope requests to an
	// application.  The "resource" parameter URI value is an identifier
	// representing the identity of the resource, which MAY be a locator
	// that corresponds to a network-addressable location where the
	// target resource is hosted.  Multiple "resource" parameters MAY be
	// used to indicate that the requested token is intended to be used
	// at multiple resources.
	Resource *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	// OPTIONAL.  The logical name of the target service where the client
	// intends to use the requested security token.  This serves a
	// purpose similar to the "resource" parameter but with the client
	// providing a logical name for the target service.  Interpretation
	// of the name requires that the value be something that both the
	// client and the authorization server understand.  An OAuth client
	// identifier, a SAML entity identifier [OASIS.saml-core-2.0-os], and
	// an OpenID Connect Issuer Identifier [OpenID.Core] are examples of
	// things that might be used as "audience" parameter values.
	// However, "audience" values used with a given authorization server
	// must be unique within that server to ensure that they are properly
	// interpreted as the intended type of value.  Multiple "audience"
	// parameters may be used to indicate that the issued token is
	// intended to be used at the multiple audiences listed.  The
	// "audience" and "resource" parameters may be used together to
	// indicate multiple target services with a mix of logical names and
	// resource URIs.
	Audience *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=audience,proto3" json:"audience,omitempty"`
	// REQUIRED.
	//
	// Types that are assignable to Grant:
	//	*TokenRequest_AuthorizationCode
	//	*TokenRequest_ClientCredentials
	//	*TokenRequest_DeviceCode
	//	*TokenRequest_RefreshToken
	//	*TokenRequest_TokenExchange
	Grant isTokenRequest_Grant `protobuf_oneof:"grant"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{4}
}

func (x *TokenRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenRequest) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *TokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (x *TokenRequest) GetScope() *wrapperspb.StringValue {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *TokenRequest) GetTokenConfirmation() *TokenConfirmation {
	if x != nil {
		return x.TokenConfirmation
	}
	return nil
}

func (x *TokenRequest) GetResource() *wrapperspb.StringValue {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *TokenRequest) GetAudience() *wrapperspb.StringValue {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (m *TokenRequest) GetGrant() isTokenRequest_Grant {
	if m != nil {
		return m.Grant
	}
	return nil
}

func (x *TokenRequest) GetAuthorizationCode() *GrantAuthorizationCode {
	if x, ok := x.GetGrant().(*TokenRequest_AuthorizationCode); ok {
		return x.AuthorizationCode
	}
	return nil
}

func (x *TokenRequest) GetClientCredentials() *GrantClientCredentials {
	if x, ok := x.GetGrant().(*TokenRequest_ClientCredentials); ok {
		return x.ClientCredentials
	}
	return nil
}

func (x *TokenRequest) GetDeviceCode() *GrantDeviceCode {
	if x, ok := x.GetGrant().(*TokenRequest_DeviceCode); ok {
		return x.DeviceCode
	}
	return nil
}

func (x *TokenRequest) GetRefreshToken() *GrantRefreshToken {
	if x, ok := x.GetGrant().(*TokenRequest_RefreshToken); ok {
		return x.RefreshToken
	}
	return nil
}

func (x *TokenRequest) GetTokenExchange() *GrantTokenExchange {
	if x, ok := x.GetGrant().(*TokenRequest_TokenExchange); ok {
		return x.TokenExchange
	}
	return nil
}

type isTokenRequest_Grant interface {
	isTokenRequest_Grant()
}

type TokenRequest_AuthorizationCode struct {
	// tools.ietf.org/html/rfc6749#section-1.3.1
	AuthorizationCode *GrantAuthorizationCode `protobuf:"bytes,10,opt,name=authorization_code,json=authorizationCode,proto3,oneof"`
}

type TokenRequest_ClientCredentials struct {
	// tools.ietf.org/html/rfc6749#section-4.4
	ClientCredentials *GrantClientCredentials `protobuf:"bytes,11,opt,name=client_credentials,json=clientCredentials,proto3,oneof"`
}

type TokenRequest_DeviceCode struct {
	// tools.ietf.org/html/rfc8628#section-3.4
	DeviceCode *GrantDeviceCode `protobuf:"bytes,12,opt,name=device_code,json=deviceCode,proto3,oneof"`
}

type TokenRequest_RefreshToken struct {
	// tools.ietf.org/html/rfc6749#section-1.5
	RefreshToken *GrantRefreshToken `protobuf:"bytes,13,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

type TokenRequest_TokenExchange struct {
	// https://tools.ietf.org/html/rfc8693#section-2.1
	TokenExchange *GrantTokenExchange `protobuf:"bytes,14,opt,name=token_exchange,json=tokenExchange,proto3,oneof"`
}

func (*TokenRequest_AuthorizationCode) isTokenRequest_Grant() {}

func (*TokenRequest_ClientCredentials) isTokenRequest_Grant() {}

func (*TokenRequest_DeviceCode) isTokenRequest_Grant() {}

func (*TokenRequest_RefreshToken) isTokenRequest_Grant() {}

func (*TokenRequest_TokenExchange) isTokenRequest_Grant() {}

type TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// REQUIRED. Access token information used to generate the final one.
	AccessToken *Token `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// OPTIONAL. Refresh token information used to generate the final one.
	RefreshToken *Token `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// OPTIONAL. ID Token information.
	IdToken *Token `protobuf:"bytes,4,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	// REQUIRED. Issuer url.
	Issuer string `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// OPTIONAL. An identifier, as described in Section 3, for the representation
	// of the issued security token. REQUIRED for RFC8693.
	IssuedTokenType string `protobuf:"bytes,6,opt,name=issued_token_type,json=issuedTokenType,proto3" json:"issued_token_type,omitempty"`
	// OPTIONAL if the scope of the issued security token is identical to
	// the scope requested by the client; otherwise, it is REQUIRED.
	Scope string `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{5}
}

func (x *TokenResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TokenResponse) GetAccessToken() *Token {
	if x != nil {
		return x.AccessToken
	}
	return nil
}

func (x *TokenResponse) GetRefreshToken() *Token {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *TokenResponse) GetIdToken() *Token {
	if x != nil {
		return x.IdToken
	}
	return nil
}

func (x *TokenResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenResponse) GetIssuedTokenType() string {
	if x != nil {
		return x.IssuedTokenType
	}
	return ""
}

func (x *TokenResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

// https://tools.ietf.org/html/rfc8628#section-3.1
type DeviceAuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED if the client is not authenticating with the
	// authorization server as described in Section 3.2.1. of [RFC6749].
	// The client identifier as described in Section 2.2 of [RFC6749].
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// OPTIONAL.  The scope of the access request as defined by
	// Section 3.3 of [RFC6749].
	Scope *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	// OPTIONAL.  The target audience.
	Audience *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
}

func (x *DeviceAuthorizationRequest) Reset() {
	*x = DeviceAuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAuthorizationRequest) ProtoMessage() {}

func (x *DeviceAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*DeviceAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceAuthorizationRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DeviceAuthorizationRequest) GetScope() *wrapperspb.StringValue {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *DeviceAuthorizationRequest) GetAudience() *wrapperspb.StringValue {
	if x != nil {
		return x.Audience
	}
	return nil
}

// https://tools.ietf.org/html/rfc8628#section-3.2
type DeviceAuthorizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// REQUIRED.  The device verification code.
	DeviceCode string `protobuf:"bytes,2,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	// REQUIRED.  The end-user verification code.
	UserCode string `protobuf:"bytes,3,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`
	// REQUIRED.  The end-user verification URI on the authorization
	// server.  The URI should be short and easy to remember as end users
	// will be asked to manually type it into their user agent.
	VerificationUri string `protobuf:"bytes,4,opt,name=verification_uri,json=verificationUri,proto3" json:"verification_uri,omitempty"`
	// OPTIONAL.  A verification URI that includes the "user_code" (or
	// other information with the same function as the "user_code"),
	// which is designed for non-textual transmission.
	VerificationUriComplete string `protobuf:"bytes,5,opt,name=verification_uri_complete,json=verificationUriComplete,proto3" json:"verification_uri_complete,omitempty"`
	// REQUIRED.  The lifetime in seconds of the "device_code" and
	// "user_code".
	ExpiresIn uint64 `protobuf:"fixed64,6,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// OPTIONAL.  The minimum amount of time in seconds that the client
	// SHOULD wait between polling requests to the token endpoint.  If no
	// value is provided, clients MUST use 5 as the default.
	Interval uint64 `protobuf:"fixed64,7,opt,name=interval,proto3" json:"interval,omitempty"`
	// REQUIRED. Issuer url.
	Issuer string `protobuf:"bytes,8,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (x *DeviceAuthorizationResponse) Reset() {
	*x = DeviceAuthorizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAuthorizationResponse) ProtoMessage() {}

func (x *DeviceAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*DeviceAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceAuthorizationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DeviceAuthorizationResponse) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *DeviceAuthorizationResponse) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *DeviceAuthorizationResponse) GetVerificationUri() string {
	if x != nil {
		return x.VerificationUri
	}
	return ""
}

func (x *DeviceAuthorizationResponse) GetVerificationUriComplete() string {
	if x != nil {
		return x.VerificationUriComplete
	}
	return ""
}

func (x *DeviceAuthorizationResponse) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *DeviceAuthorizationResponse) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *DeviceAuthorizationResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type DeviceCodeValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The end-user verification code.
	UserCode string `protobuf:"bytes,1,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`
	// REQUIRED. User identity.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *DeviceCodeValidationRequest) Reset() {
	*x = DeviceCodeValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCodeValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCodeValidationRequest) ProtoMessage() {}

func (x *DeviceCodeValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCodeValidationRequest.ProtoReflect.Descriptor instead.
func (*DeviceCodeValidationRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{8}
}

func (x *DeviceCodeValidationRequest) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *DeviceCodeValidationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type DeviceCodeValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeviceCodeValidationResponse) Reset() {
	*x = DeviceCodeValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCodeValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCodeValidationResponse) ProtoMessage() {}

func (x *DeviceCodeValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCodeValidationResponse.ProtoReflect.Descriptor instead.
func (*DeviceCodeValidationResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceCodeValidationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_oidc_core_v1_core_api_proto protoreflect.FileDescriptor

var file_oidc_core_v1_core_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x6f, 0x69, 0x64,
	0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6f, 0x69, 0x64, 0x63, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x57, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8c, 0x02, 0x0a, 0x19, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x22, 0xf7, 0x05, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x69, 0x64, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x55,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x69, 0x64,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x49, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x22, 0xb6, 0x02, 0x0a, 0x0d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69,
	0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x38, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69,
	0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc0, 0x02,
	0x0a, 0x1b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x69, 0x12, 0x3a, 0x0a, 0x19, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x22, 0x54, 0x0a, 0x1b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x49, 0x0a, 0x1c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0xb2, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x5c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x69,
	0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e,
	0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x69, 0x64, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidc_core_v1_core_api_proto_rawDescOnce sync.Once
	file_oidc_core_v1_core_api_proto_rawDescData = file_oidc_core_v1_core_api_proto_rawDesc
)

func file_oidc_core_v1_core_api_proto_rawDescGZIP() []byte {
	file_oidc_core_v1_core_api_proto_rawDescOnce.Do(func() {
		file_oidc_core_v1_core_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidc_core_v1_core_api_proto_rawDescData)
	})
	return file_oidc_core_v1_core_api_proto_rawDescData
}

var (
	file_oidc_core_v1_core_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
	file_oidc_core_v1_core_api_proto_goTypes  = []interface{}{
		(*AuthorizationCodeRequest)(nil),     // 0: oidc.core.v1.AuthorizationCodeRequest
		(*AuthorizationCodeResponse)(nil),    // 1: oidc.core.v1.AuthorizationCodeResponse
		(*RegistrationRequest)(nil),          // 2: oidc.core.v1.RegistrationRequest
		(*RegistrationResponse)(nil),         // 3: oidc.core.v1.RegistrationResponse
		(*TokenRequest)(nil),                 // 4: oidc.core.v1.TokenRequest
		(*TokenResponse)(nil),                // 5: oidc.core.v1.TokenResponse
		(*DeviceAuthorizationRequest)(nil),   // 6: oidc.core.v1.DeviceAuthorizationRequest
		(*DeviceAuthorizationResponse)(nil),  // 7: oidc.core.v1.DeviceAuthorizationResponse
		(*DeviceCodeValidationRequest)(nil),  // 8: oidc.core.v1.DeviceCodeValidationRequest
		(*DeviceCodeValidationResponse)(nil), // 9: oidc.core.v1.DeviceCodeValidationResponse
		(*Client)(nil),                       // 10: oidc.core.v1.Client
		(*AuthorizationRequest)(nil),         // 11: oidc.core.v1.AuthorizationRequest
		(*Error)(nil),                        // 12: oidc.core.v1.Error
		(*TokenConfirmation)(nil),            // 13: oidc.core.v1.TokenConfirmation
		(*wrapperspb.StringValue)(nil),       // 14: google.protobuf.StringValue
		(*GrantAuthorizationCode)(nil),       // 15: oidc.core.v1.GrantAuthorizationCode
		(*GrantClientCredentials)(nil),       // 16: oidc.core.v1.GrantClientCredentials
		(*GrantDeviceCode)(nil),              // 17: oidc.core.v1.GrantDeviceCode
		(*GrantRefreshToken)(nil),            // 18: oidc.core.v1.GrantRefreshToken
		(*GrantTokenExchange)(nil),           // 19: oidc.core.v1.GrantTokenExchange
		(*Token)(nil),                        // 20: oidc.core.v1.Token
	}
)

var file_oidc_core_v1_core_api_proto_depIdxs = []int32{
	10, // 0: oidc.core.v1.AuthorizationCodeRequest.client:type_name -> oidc.core.v1.Client
	11, // 1: oidc.core.v1.AuthorizationCodeRequest.authorization_request:type_name -> oidc.core.v1.AuthorizationRequest
	12, // 2: oidc.core.v1.AuthorizationCodeResponse.error:type_name -> oidc.core.v1.Error
	10, // 3: oidc.core.v1.RegistrationRequest.client:type_name -> oidc.core.v1.Client
	11, // 4: oidc.core.v1.RegistrationRequest.authorization_request:type_name -> oidc.core.v1.AuthorizationRequest
	13, // 5: oidc.core.v1.RegistrationRequest.confirmation:type_name -> oidc.core.v1.TokenConfirmation
	12, // 6: oidc.core.v1.RegistrationResponse.error:type_name -> oidc.core.v1.Error
	10, // 7: oidc.core.v1.TokenRequest.client:type_name -> oidc.core.v1.Client
	14, // 8: oidc.core.v1.TokenRequest.scope:type_name -> google.protobuf.StringValue
	13, // 9: oidc.core.v1.TokenRequest.token_confirmation:type_name -> oidc.core.v1.TokenConfirmation
	14, // 10: oidc.core.v1.TokenRequest.resource:type_name -> google.protobuf.StringValue
	14, // 11: oidc.core.v1.TokenRequest.audience:type_name -> google.protobuf.StringValue
	15, // 12: oidc.core.v1.TokenRequest.authorization_code:type_name -> oidc.core.v1.GrantAuthorizationCode
	16, // 13: oidc.core.v1.TokenRequest.client_credentials:type_name -> oidc.core.v1.GrantClientCredentials
	17, // 14: oidc.core.v1.TokenRequest.device_code:type_name -> oidc.core.v1.GrantDeviceCode
	18, // 15: oidc.core.v1.TokenRequest.refresh_token:type_name -> oidc.core.v1.GrantRefreshToken
	19, // 16: oidc.core.v1.TokenRequest.token_exchange:type_name -> oidc.core.v1.GrantTokenExchange
	12, // 17: oidc.core.v1.TokenResponse.error:type_name -> oidc.core.v1.Error
	20, // 18: oidc.core.v1.TokenResponse.access_token:type_name -> oidc.core.v1.Token
	20, // 19: oidc.core.v1.TokenResponse.refresh_token:type_name -> oidc.core.v1.Token
	20, // 20: oidc.core.v1.TokenResponse.id_token:type_name -> oidc.core.v1.Token
	14, // 21: oidc.core.v1.DeviceAuthorizationRequest.scope:type_name -> google.protobuf.StringValue
	14, // 22: oidc.core.v1.DeviceAuthorizationRequest.audience:type_name -> google.protobuf.StringValue
	12, // 23: oidc.core.v1.DeviceAuthorizationResponse.error:type_name -> oidc.core.v1.Error
	12, // 24: oidc.core.v1.DeviceCodeValidationResponse.error:type_name -> oidc.core.v1.Error
	0,  // 25: oidc.core.v1.AuthorizationAPI.Authorize:input_type -> oidc.core.v1.AuthorizationCodeRequest
	4,  // 26: oidc.core.v1.AuthorizationAPI.Token:input_type -> oidc.core.v1.TokenRequest
	1,  // 27: oidc.core.v1.AuthorizationAPI.Authorize:output_type -> oidc.core.v1.AuthorizationCodeResponse
	5,  // 28: oidc.core.v1.AuthorizationAPI.Token:output_type -> oidc.core.v1.TokenResponse
	27, // [27:29] is the sub-list for method output_type
	25, // [25:27] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_oidc_core_v1_core_api_proto_init() }
func file_oidc_core_v1_core_api_proto_init() {
	if File_oidc_core_v1_core_api_proto != nil {
		return
	}
	file_oidc_core_v1_core_proto_init()
	file_oidc_core_v1_error_proto_init()
	file_oidc_core_v1_client_proto_init()
	file_oidc_core_v1_token_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_oidc_core_v1_core_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAuthorizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCodeValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCodeValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oidc_core_v1_core_api_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TokenRequest_AuthorizationCode)(nil),
		(*TokenRequest_ClientCredentials)(nil),
		(*TokenRequest_DeviceCode)(nil),
		(*TokenRequest_RefreshToken)(nil),
		(*TokenRequest_TokenExchange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidc_core_v1_core_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oidc_core_v1_core_api_proto_goTypes,
		DependencyIndexes: file_oidc_core_v1_core_api_proto_depIdxs,
		MessageInfos:      file_oidc_core_v1_core_api_proto_msgTypes,
	}.Build()
	File_oidc_core_v1_core_api_proto = out.File
	file_oidc_core_v1_core_api_proto_rawDesc = nil
	file_oidc_core_v1_core_api_proto_goTypes = nil
	file_oidc_core_v1_core_api_proto_depIdxs = nil
}
