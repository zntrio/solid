// Licensed to SolID under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. SolID licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package oidc.core.v1;

option go_package = "oidc/core/v1;corev1";

import "google/protobuf/wrappers.proto";

// ClientType describes OIDC Client type enumeration.
// https://tools.ietf.org/html/rfc6749#section-2.1
enum ClientType {
  // Default value
  CLIENT_TYPE_INVALID = 0;
  // Explicit unknown
  CLIENT_TYPE_UNKNOWN = 1;
  // Clients capable of maintaining the confidentiality of their
  // credentials (e.g., client implemented on a secure server with
  // restricted access to the client credentials), or capable of secure
  // client authentication using other means.
  CLIENT_TYPE_CONFIDENTIAL = 2;
  // Clients incapable of maintaining the confidentiality of their
  // credentials (e.g., clients executing on the device used by the
  // resource owner, such as an installed native application or a web
  // browser-based application), and incapable of secure client
  // authentication via any other means.
  CLIENT_TYPE_PUBLIC = 3;
}

// Client defines internal OIDC client properties.
message Client {
  string client_id = 1;
  ClientType client_type = 2;
  repeated string redirect_uris = 3;
  repeated string response_types = 4;
  repeated string grant_types = 5;
  string application_type = 6;
  repeated string contacts = 7;
  string client_name = 8;
  string logo_uri = 9;
  string client_uri = 10;
  string policy_uri = 11;
  string tos_uri = 12;
  string jwks_uri = 13;
  bytes jwks = 14;
  bytes client_secret = 15;
  string subject_type = 16;
  string sector_identifier = 17;
  string token_endpoint_auth_method = 18;
  string tls_client_auth_subject_dn = 19;
  string tls_client_auth_san_dns = 20;
  string tls_client_auth_san_uri = 21;
  string tls_client_auth_san_ip = 22;
  string tls_client_auth_san_email = 23;
  bool tls_client_certificate_bound_access_tokens = 24;
}

message ClientMeta {
  google.protobuf.StringValue application_type = 1;
  repeated string redirect_uris = 2;
  google.protobuf.StringValue token_endpoint_auth_method = 3;
  repeated string grant_types = 4;
  repeated string response_types = 5;
  google.protobuf.StringValue client_name = 6;
  map<string, string> client_name_i18n = 7;
  google.protobuf.StringValue client_uri = 8;
  google.protobuf.StringValue logo_uri = 9;
  map<string, string> logo_uri_i18n = 10;
  google.protobuf.StringValue scope = 11;
  repeated string contacts = 12;
  google.protobuf.StringValue tos_uri = 13;
  map<string, string> tos_uri_i18n = 14;
  google.protobuf.StringValue policy_uri = 15;
  map<string, string> policy_uri_i18n = 16;
  google.protobuf.StringValue jwk_uri = 17;
  google.protobuf.BytesValue jwks = 18;
  google.protobuf.StringValue software_id = 19;
  google.protobuf.StringValue software_version = 20;
  google.protobuf.StringValue software_statement = 21;
  google.protobuf.StringValue subject_type = 22;
  google.protobuf.StringValue sector_identifier = 23;
  google.protobuf.StringValue tls_client_auth_subject_dn = 24;
  google.protobuf.StringValue tls_client_auth_san_dns = 25;
  google.protobuf.StringValue tls_client_auth_san_uri = 26;
  google.protobuf.StringValue tls_client_auth_san_ip = 27;
  google.protobuf.StringValue tls_client_auth_san_email = 28;
  google.protobuf.BoolValue tls_client_certificate_bound_access_tokens = 29;
}

message SoftwareStatement {
  string software_id = 1;
}
