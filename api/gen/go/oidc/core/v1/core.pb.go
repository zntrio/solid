// Licensed to SolID under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. SolID licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: oidc/core/v1/core.proto

package corev1

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Display defines values to set how to displays the authentication and consent
// user interface pages to the End-User.
type Display int32

const (
	// Default value when nothing specificied.
	Display_DISPLAY_INVALID Display = 0
	// Value to set as unknown.
	Display_DISPLAY_UNKNOWN Display = 1
	// The Authorization Server SHOULD display the authentication and consent UI
	// consistent with a full User Agent page view. If the display parameter is
	// not specified, this is the default display mode.
	Display_DISPLAY_PAGE Display = 2
	// The Authorization Server SHOULD display the authentication and consent UI
	// consistent with a popup User Agent window. The popup User Agent window
	// should be of an appropriate size for a login-focused dialog and should not
	// obscure the entire window that it is popping up over.
	Display_DISPLAY_POPUP Display = 3
	// The Authorization Server SHOULD display the authentication and consent UI
	// consistent with a device that leverages a touch interface.
	Display_DISPLAY_TOUCH Display = 4
	// The Authorization Server SHOULD display the authentication and consent UI
	// consistent with a "feature phone" type display.
	Display_DISPLAY_WAP Display = 5
)

// Enum value maps for Display.
var (
	Display_name = map[int32]string{
		0: "DISPLAY_INVALID",
		1: "DISPLAY_UNKNOWN",
		2: "DISPLAY_PAGE",
		3: "DISPLAY_POPUP",
		4: "DISPLAY_TOUCH",
		5: "DISPLAY_WAP",
	}
	Display_value = map[string]int32{
		"DISPLAY_INVALID": 0,
		"DISPLAY_UNKNOWN": 1,
		"DISPLAY_PAGE":    2,
		"DISPLAY_POPUP":   3,
		"DISPLAY_TOUCH":   4,
		"DISPLAY_WAP":     5,
	}
)

func (x Display) Enum() *Display {
	p := new(Display)
	*p = x
	return p
}

func (x Display) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Display) Descriptor() protoreflect.EnumDescriptor {
	return file_oidc_core_v1_core_proto_enumTypes[0].Descriptor()
}

func (Display) Type() protoreflect.EnumType {
	return &file_oidc_core_v1_core_proto_enumTypes[0]
}

func (x Display) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Display.Descriptor instead.
func (Display) EnumDescriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{0}
}

// Prompt defines values for required prompt actions.
type Prompt int32

const (
	// Default value when nothing specificied.
	Prompt_PROMPT_INVALID Prompt = 0
	// Value to set as unknown.
	Prompt_PROMPT_UNKNOWN Prompt = 1
	// The Authorization Server MUST NOT display any authentication or consent
	// user interface pages. An error is returned if an End-User is not already
	// authenticated or the Client does not have pre-configured consent for the
	// requested Claims or does not fulfill other conditions for processing the
	// request. The error code will typically be login_required,
	// interaction_required, or another code defined in Section 3.1.2.6. This
	// can be used as a method to check for existing authentication and/or
	// consent.
	Prompt_PROMPT_NONE Prompt = 2
	// The Authorization Server SHOULD prompt the End-User for reauthentication.
	// If it cannot reauthenticate the End-User, it MUST return an error,
	// typically login_required.
	Prompt_PROMPT_LOGIN Prompt = 3
	// The Authorization Server SHOULD prompt the End-User for consent before
	// returning information to the Client. If it cannot obtain consent, it MUST
	// return an error, typically consent_required.
	Prompt_PROMPT_CONSENT Prompt = 4
	// The Authorization Server SHOULD prompt the End-User to select a user
	// account. This enables an End-User who has multiple accounts at the
	// Authorization Server to select amongst the multiple accounts that they
	// might have current sessions for. If it cannot obtain an account selection
	// choice made by the End-User, it MUST return an error, typically
	// account_selection_required.
	Prompt_PROMPT_SELECT_ACCOUNT Prompt = 5
)

// Enum value maps for Prompt.
var (
	Prompt_name = map[int32]string{
		0: "PROMPT_INVALID",
		1: "PROMPT_UNKNOWN",
		2: "PROMPT_NONE",
		3: "PROMPT_LOGIN",
		4: "PROMPT_CONSENT",
		5: "PROMPT_SELECT_ACCOUNT",
	}
	Prompt_value = map[string]int32{
		"PROMPT_INVALID":        0,
		"PROMPT_UNKNOWN":        1,
		"PROMPT_NONE":           2,
		"PROMPT_LOGIN":          3,
		"PROMPT_CONSENT":        4,
		"PROMPT_SELECT_ACCOUNT": 5,
	}
)

func (x Prompt) Enum() *Prompt {
	p := new(Prompt)
	*p = x
	return p
}

func (x Prompt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Prompt) Descriptor() protoreflect.EnumDescriptor {
	return file_oidc_core_v1_core_proto_enumTypes[1].Descriptor()
}

func (Prompt) Type() protoreflect.EnumType {
	return &file_oidc_core_v1_core_proto_enumTypes[1]
}

func (x Prompt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Prompt.Descriptor instead.
func (Prompt) EnumDescriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{1}
}

type GrantAuthorizationCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	RedirectUri  string `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	CodeVerifier string `protobuf:"bytes,3,opt,name=code_verifier,json=codeVerifier,proto3" json:"code_verifier,omitempty"`
}

func (x *GrantAuthorizationCode) Reset() {
	*x = GrantAuthorizationCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantAuthorizationCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantAuthorizationCode) ProtoMessage() {}

func (x *GrantAuthorizationCode) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantAuthorizationCode.ProtoReflect.Descriptor instead.
func (*GrantAuthorizationCode) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{0}
}

func (x *GrantAuthorizationCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GrantAuthorizationCode) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *GrantAuthorizationCode) GetCodeVerifier() string {
	if x != nil {
		return x.CodeVerifier
	}
	return ""
}

type GrantRefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *GrantRefreshToken) Reset() {
	*x = GrantRefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRefreshToken) ProtoMessage() {}

func (x *GrantRefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRefreshToken.ProtoReflect.Descriptor instead.
func (*GrantRefreshToken) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{1}
}

func (x *GrantRefreshToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// https://tools.ietf.org/html/rfc8628#section-3.4
type GrantDeviceCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.  The device verification code, "device_code" from the
	// device authorization response, defined in Section 3.2.
	DeviceCode string `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	// REQUIRED if the client is not authenticating with the
	// authorization server as described in Section 3.2.1. of [RFC6749].
	// The client identifier as described in Section 2.2 of [RFC6749].
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GrantDeviceCode) Reset() {
	*x = GrantDeviceCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantDeviceCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantDeviceCode) ProtoMessage() {}

func (x *GrantDeviceCode) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantDeviceCode.ProtoReflect.Descriptor instead.
func (*GrantDeviceCode) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{2}
}

func (x *GrantDeviceCode) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *GrantDeviceCode) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GrantClientCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audience string `protobuf:"bytes,1,opt,name=audience,proto3" json:"audience,omitempty"`
	Scope    string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *GrantClientCredentials) Reset() {
	*x = GrantClientCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantClientCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantClientCredentials) ProtoMessage() {}

func (x *GrantClientCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantClientCredentials.ProtoReflect.Descriptor instead.
func (*GrantClientCredentials) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{3}
}

func (x *GrantClientCredentials) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *GrantClientCredentials) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

// An Authentication Request is an OAuth 2.0 Authorization Request that requests
// that the End-User be authenticated by the Authorization Server.
type AuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. OpenID Connect requests MUST contain the openid scope value. If
	// the openid scope value is not present, the behavior is entirely unspecified.
	// Other scope values MAY be present. Scope values used that are not understood
	// by an implementation SHOULD be ignored.
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// REQUIRED. OAuth 2.0 Response Type value that determines the authorization
	// processing flow to be used, including what parameters are returned from
	// the endpoints used. When using the Authorization Code Flow, this value is
	// code.
	ResponseType string `protobuf:"bytes,2,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	// REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// REQUIRED. Redirection URI to which the response will be sent. This URI
	// MUST exactly match one of the Redirection URI values for the Client
	// pre-registered at the OpenID Provider, with the matching performed as
	// described in Section 6.2.1 of [RFC3986] (Simple String Comparison).
	// When using this flow, the Redirection URI SHOULD use the https scheme;
	// however, it MAY use the http scheme, provided that the Client Type is
	// confidential, as defined in Section 2.1 of OAuth 2.0, and provided the OP
	// allows the use of http Redirection URIs in this case. The Redirection URI
	// MAY use an alternate scheme, such as one that is intended to identify a
	// callback into a native application.
	RedirectUri string `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// RECOMMENDED. Opaque value used to maintain state between the request and
	// the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation
	// is done by cryptographically binding the value of this parameter with a
	// browser cookie.
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// OPTIONAL. Informs the Authorization Server of the mechanism to be used for
	// returning parameters from the Authorization Endpoint. This use of this
	// parameter is NOT RECOMMENDED when the Response Mode that would be requested
	// is the default mode specified for the Response Type.
	ResponseMode *wrappers.StringValue `protobuf:"bytes,6,opt,name=response_mode,json=responseMode,proto3" json:"response_mode,omitempty"`
	// OPTIONAL. String value used to associate a Client session with an ID Token,
	// and to mitigate replay attacks. The value is passed through unmodified from
	// the Authentication Request to the ID Token. Sufficient entropy MUST be
	// present in the nonce values used to prevent attackers from guessing values.
	// https://tools.ietf.org/html/draft-ietf-oauth-security-topics-15#section-4.5.3
	Nonce string `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// OPTIONAL. ASCII string value that specifies how the Authorization Server
	// displays the authentication and consent user interface pages to the End-User.
	Display *wrappers.StringValue `protobuf:"bytes,8,opt,name=display,proto3" json:"display,omitempty"`
	// OPTIONAL. Space delimited, case sensitive list of ASCII string values that
	// specifies whether the Authorization Server prompts the End-User for
	// reauthentication and consent.
	Prompt *wrappers.StringValue `protobuf:"bytes,9,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time
	// in seconds since the last time the End-User was actively authenticated by
	// the OP. If the elapsed time is greater than this value, the OP MUST attempt
	// to actively re-authenticate the End-User. (The max_age request parameter
	// corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] max_auth_age request
	// parameter.) When max_age is used, the ID Token returned MUST include an
	// auth_time Claim Value.
	MaxAge *wrappers.UInt64Value `protobuf:"bytes,10,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// OPTIONAL. End-User's preferred languages and scripts for the user
	// interface, represented as a space-separated list of BCP47 [RFC5646]
	// language tag values, ordered by preference. For instance, the value "fr-CA
	// fr en" represents a preference for French as spoken in Canada, then French
	// (without a region designation), followed by English (without a region
	// designation). An error SHOULD NOT result if some or all of the requested
	// locales are not supported by the OpenID Provider.
	UiLocales *wrappers.StringValue `protobuf:"bytes,11,opt,name=ui_locales,json=uiLocales,proto3" json:"ui_locales,omitempty"`
	// OPTIONAL. ID Token previously issued by the Authorization Server being
	// passed as a hint about the End-User's current or past authenticated session
	// with the Client. If the End-User identified by the ID Token is logged in or
	// is logged in by the request, then the Authorization Server returns a
	// positive response; otherwise, it SHOULD return an error, such as
	// login_required. When possible, an id_token_hint SHOULD be present when
	// prompt=none is used and an invalid_request error MAY be returned if it is
	// not; however, the server SHOULD respond successfully when possible, even
	// if it is not present. The Authorization Server need not be listed as an
	// audience of the ID Token when it is used as an id_token_hint value.
	// If the ID Token received by the RP from the OP is encrypted, to use it as
	// an id_token_hint, the Client MUST decrypt the signed ID Token contained
	// within the encrypted ID Token. The Client MAY re-encrypt the signed ID
	// token to the Authentication Server using a key that enables the server to
	// decrypt the ID Token, and use the re-encrypted ID token as the
	// id_token_hint value.
	IdTokenHint *wrappers.StringValue `protobuf:"bytes,12,opt,name=id_token_hint,json=idTokenHint,proto3" json:"id_token_hint,omitempty"`
	// OPTIONAL. Requested Authentication Context Class Reference values.
	// Space-separated string that specifies the acr values that the Authorization
	// Server is being requested to use for processing this Authentication
	// Request, with the values appearing in order of preference. The
	// Authentication Context Class satisfied by the authentication performed is
	// returned as the acr Claim Value, as specified in Section 2. The acr Claim
	// is requested as a Voluntary Claim by this parameter.
	AcrValues *wrappers.StringValue `protobuf:"bytes,13,opt,name=acr_values,json=acrValues,proto3" json:"acr_values,omitempty"`
	// OPTIONAL. This parameter enables OpenID Connect requests to be passed in a
	// single, self-contained parameter and to be optionally signed and/or
	// encrypted. The parameter value is a Request Object value, as specified in
	// Section 6.1. It represents the request as a JWT whose Claims are the
	// request parameters.
	Request *wrappers.StringValue `protobuf:"bytes,14,opt,name=request,proto3" json:"request,omitempty"`
	// OPTIONAL. This parameter enables OpenID Connect requests to be passed by
	// reference, rather than by value. The request_uri value is a URL using the
	// https scheme referencing a resource containing a Request Object value,
	// which is a JWT containing the request parameters.
	RequestUri *wrappers.StringValue `protobuf:"bytes,15,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	// REQUIRED. This parameter enables PKCE flow.
	CodeChallenge string `protobuf:"bytes,16,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	// REQUIRED. This parameter enables PKCE flow.
	CodeChallengeMethod string `protobuf:"bytes,17,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"`
	// REQUIRED. Add targeted audience.
	Audience string `protobuf:"bytes,18,opt,name=audience,proto3" json:"audience,omitempty"`
	// OPTIONAL.
	// https://tools.ietf.org/html/draft-fett-oauth-dpop-04#section-5
	DpopProof string `protobuf:"bytes,19,opt,name=dpop_proof,json=dpopProof,proto3" json:"dpop_proof,omitempty"`
	// OPTIONAL
	// https://tools.ietf.org/html/rfc8707
	// Indicates the target service or resource to which access is being
	// requested.  Its value MUST be an absolute URI, as specified by
	// Section 4.3 of [RFC3986].  The URI MUST NOT include a fragment
	// component.  It SHOULD NOT include a query component, but it is
	// recognized that there are cases that make a query component a
	// useful and necessary part of the resource parameter, such as when
	// one or more query parameters are used to scope requests to an
	// application.  The "resource" parameter URI value is an identifier
	// representing the identity of the resource, which MAY be a locator
	// that corresponds to a network-addressable location where the
	// target resource is hosted.  Multiple "resource" parameters MAY be
	// used to indicate that the requested token is intended to be used
	// at multiple resources.
	Resource *wrappers.StringValue `protobuf:"bytes,20,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *AuthorizationRequest) Reset() {
	*x = AuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationRequest) ProtoMessage() {}

func (x *AuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationRequest.ProtoReflect.Descriptor instead.
func (*AuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizationRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthorizationRequest) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *AuthorizationRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizationRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizationRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizationRequest) GetResponseMode() *wrappers.StringValue {
	if x != nil {
		return x.ResponseMode
	}
	return nil
}

func (x *AuthorizationRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *AuthorizationRequest) GetDisplay() *wrappers.StringValue {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *AuthorizationRequest) GetPrompt() *wrappers.StringValue {
	if x != nil {
		return x.Prompt
	}
	return nil
}

func (x *AuthorizationRequest) GetMaxAge() *wrappers.UInt64Value {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *AuthorizationRequest) GetUiLocales() *wrappers.StringValue {
	if x != nil {
		return x.UiLocales
	}
	return nil
}

func (x *AuthorizationRequest) GetIdTokenHint() *wrappers.StringValue {
	if x != nil {
		return x.IdTokenHint
	}
	return nil
}

func (x *AuthorizationRequest) GetAcrValues() *wrappers.StringValue {
	if x != nil {
		return x.AcrValues
	}
	return nil
}

func (x *AuthorizationRequest) GetRequest() *wrappers.StringValue {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AuthorizationRequest) GetRequestUri() *wrappers.StringValue {
	if x != nil {
		return x.RequestUri
	}
	return nil
}

func (x *AuthorizationRequest) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *AuthorizationRequest) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *AuthorizationRequest) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *AuthorizationRequest) GetDpopProof() string {
	if x != nil {
		return x.DpopProof
	}
	return ""
}

func (x *AuthorizationRequest) GetResource() *wrappers.StringValue {
	if x != nil {
		return x.Resource
	}
	return nil
}

var File_oidc_core_v1_core_proto protoreflect.FileDescriptor

var file_oidc_core_v1_core_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f, 0x69, 0x64, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x16, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x38, 0x0a,
	0x11, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x22, 0xa8, 0x07, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12,
	0x34, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x75, 0x69, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x75, 0x69, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61,
	0x63, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61,
	0x63, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x70, 0x6f, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x70, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2a,
	0x7c, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49,
	0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f,
	0x50, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41,
	0x59, 0x5f, 0x50, 0x4f, 0x50, 0x55, 0x50, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x57, 0x41, 0x50, 0x10, 0x05, 0x2a, 0x82, 0x01,
	0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x4d,
	0x50, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x4d, 0x50,
	0x54, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x05, 0x42, 0x15, 0x5a, 0x13, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_oidc_core_v1_core_proto_rawDescOnce sync.Once
	file_oidc_core_v1_core_proto_rawDescData = file_oidc_core_v1_core_proto_rawDesc
)

func file_oidc_core_v1_core_proto_rawDescGZIP() []byte {
	file_oidc_core_v1_core_proto_rawDescOnce.Do(func() {
		file_oidc_core_v1_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidc_core_v1_core_proto_rawDescData)
	})
	return file_oidc_core_v1_core_proto_rawDescData
}

var file_oidc_core_v1_core_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_oidc_core_v1_core_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_oidc_core_v1_core_proto_goTypes = []interface{}{
	(Display)(0),                   // 0: oidc.core.v1.Display
	(Prompt)(0),                    // 1: oidc.core.v1.Prompt
	(*GrantAuthorizationCode)(nil), // 2: oidc.core.v1.GrantAuthorizationCode
	(*GrantRefreshToken)(nil),      // 3: oidc.core.v1.GrantRefreshToken
	(*GrantDeviceCode)(nil),        // 4: oidc.core.v1.GrantDeviceCode
	(*GrantClientCredentials)(nil), // 5: oidc.core.v1.GrantClientCredentials
	(*AuthorizationRequest)(nil),   // 6: oidc.core.v1.AuthorizationRequest
	(*wrappers.StringValue)(nil),   // 7: google.protobuf.StringValue
	(*wrappers.UInt64Value)(nil),   // 8: google.protobuf.UInt64Value
}
var file_oidc_core_v1_core_proto_depIdxs = []int32{
	7,  // 0: oidc.core.v1.AuthorizationRequest.response_mode:type_name -> google.protobuf.StringValue
	7,  // 1: oidc.core.v1.AuthorizationRequest.display:type_name -> google.protobuf.StringValue
	7,  // 2: oidc.core.v1.AuthorizationRequest.prompt:type_name -> google.protobuf.StringValue
	8,  // 3: oidc.core.v1.AuthorizationRequest.max_age:type_name -> google.protobuf.UInt64Value
	7,  // 4: oidc.core.v1.AuthorizationRequest.ui_locales:type_name -> google.protobuf.StringValue
	7,  // 5: oidc.core.v1.AuthorizationRequest.id_token_hint:type_name -> google.protobuf.StringValue
	7,  // 6: oidc.core.v1.AuthorizationRequest.acr_values:type_name -> google.protobuf.StringValue
	7,  // 7: oidc.core.v1.AuthorizationRequest.request:type_name -> google.protobuf.StringValue
	7,  // 8: oidc.core.v1.AuthorizationRequest.request_uri:type_name -> google.protobuf.StringValue
	7,  // 9: oidc.core.v1.AuthorizationRequest.resource:type_name -> google.protobuf.StringValue
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_oidc_core_v1_core_proto_init() }
func file_oidc_core_v1_core_proto_init() {
	if File_oidc_core_v1_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidc_core_v1_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantAuthorizationCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantDeviceCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantClientCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidc_core_v1_core_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidc_core_v1_core_proto_goTypes,
		DependencyIndexes: file_oidc_core_v1_core_proto_depIdxs,
		EnumInfos:         file_oidc_core_v1_core_proto_enumTypes,
		MessageInfos:      file_oidc_core_v1_core_proto_msgTypes,
	}.Build()
	File_oidc_core_v1_core_proto = out.File
	file_oidc_core_v1_core_proto_rawDesc = nil
	file_oidc_core_v1_core_proto_goTypes = nil
	file_oidc_core_v1_core_proto_depIdxs = nil
}
